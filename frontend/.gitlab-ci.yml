stages: [build, notify]

build-frontend-code-job:
  stage: build
  tags: [gitlab_runner_1]
  only:
    changes: ["frontend/**/*"]
  before_script:
    - 'export NVM_DIR="$HOME/.nvm"'
    - '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"'
    - nvm install 10
    - npm -v
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    name: "frontend-$CI_COMMIT_SHORT_SHA"
    paths:
      - frontend/dist/frontend
    expire_in: 1 week
    when: always

telegram-notification-frontend:
  stage: notify
  tags: [gitlab_runner_1]
  needs: [build-frontend-code-job]
  only:
    changes: ["frontend/**/*"]
    variables:
      - "$CI_COMMIT_MESSAGE =~ /send notification/i"
  script:
    - |
      URL_COMMIT="$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_SHA/download?job=build-frontend-code-job"
      URL_REF="$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_REF_NAME/download?job=build-frontend-code-job"
      MSG="<b>âœ… Frontend build success</b><br/>
      <b>Project:</b> $CI_PROJECT_PATH<br/>
      <b>Branch:</b> $CI_COMMIT_REF_NAME<br/>
      <b>Commit:</b> <code>$CI_COMMIT_SHORT_SHA</code><br/>
      <b>Artifacts (commit):</b> <a href=\"$URL_COMMIT\">download</a><br/>
      <b>Artifacts (latest on branch):</b> <a href=\"$URL_REF\">download</a>"
      curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
        -d chat_id="$TELEGRAM_CHAT_ID" \
        -d parse_mode=HTML \
        --data-urlencode "text=$MSG"
